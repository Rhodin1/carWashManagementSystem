/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rw.gov.CarWashMgt.view;

import Utility.BDUtility;
import Validations.CarWash;
import java.awt.Color;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rw.gov.CarWashMgt.model.Employees;
import rw.gov.CarWashMgt.model.Managers;
import rw.gov.CarWashMgt.service.ManagersService;

/**
 *
 * @author ADMIN
 */
public class ManagersPage extends javax.swing.JFrame {
    private String jdbcUrl = "jdbc:postgresql://localhost:5432/carWash_managment_system_db";
    private String username = "postgres";
    private String password = "Rayonnant@12";
    
    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form ManagersPage
     */
    public ManagersPage() {
        initComponents();
        BDUtility.setImage(this, "images/abc1.jpg", 1000, 550);
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(4, 4, 4, 4, Color.BLACK));
        UpdateManagersCombo();
        addColumnsHeaderNameToManagersTable();
    }
    
    private void UpdateManagersCombo(){
        try{
            Connection con = DriverManager.getConnection(jdbcUrl, username, password);
            String sql = "SELECT * FROM users";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
             while(rs.next()){
                 managerIdCombo.addItem(rs.getString("User_Id"));
             }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void addColumnsHeaderNameToManagersTable(){
        tableModel.setColumnCount(0);
        tableModel.addColumn("Manager ID");
        tableModel.addColumn("Full Names");
        tableModel.addColumn("Phone Number");
        ManagerTable.setModel(tableModel);
    }
    
    private void addRowsDataToManagersTable(){
        try{
            tableModel.setRowCount(0);
            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
            ManagersService service = (ManagersService)theRegistry.lookup("man");
            List<Managers> managers = service.findAll();
            for(Managers theManagers : managers){
                tableModel.addRow(new Object[]{
                    theManagers.getId(),
                    theManagers.getName(),
                    theManagers.getPhoneNumber(),
                });
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel86 = new javax.swing.JLabel();
        managerFullNameTxt = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        managerPhoneNumberTxt = new javax.swing.JTextField();
        managerRegisterBtn = new javax.swing.JButton();
        managerUpdateBtn = new javax.swing.JButton();
        managerDeleteBtn = new javax.swing.JButton();
        jLabel92 = new javax.swing.JLabel();
        managerIdTxt = new javax.swing.JTextField();
        managerSearchBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        ManagerTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        exitBtn1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        managerIdCombo = new javax.swing.JComboBox<>();
        managerDisplayBtn1 = new javax.swing.JButton();
        managerClearBtn = new javax.swing.JButton();
        managerPrintBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 550));
        setUndecorated(true);

        jLabel86.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel86.setText("Full Names");

        jLabel89.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel89.setText("Phone Number");

        managerRegisterBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerRegisterBtn.setText("Register");
        managerRegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerRegisterBtnActionPerformed(evt);
            }
        });

        managerUpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerUpdateBtn.setText("Update");
        managerUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerUpdateBtnActionPerformed(evt);
            }
        });

        managerDeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerDeleteBtn.setText("Delete");
        managerDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerDeleteBtnActionPerformed(evt);
            }
        });

        jLabel92.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel92.setText("Manager Id");

        managerSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerSearchBtn.setText("Search");
        managerSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerSearchBtnActionPerformed(evt);
            }
        });

        ManagerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ManagerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ManagerTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(ManagerTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("MANAGER MANAGEMENT");

        exitBtn1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        exitBtn1.setText("X");
        exitBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtn1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Id");

        managerIdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0" }));
        managerIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerIdComboActionPerformed(evt);
            }
        });

        managerDisplayBtn1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerDisplayBtn1.setText("Display");
        managerDisplayBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerDisplayBtn1ActionPerformed(evt);
            }
        });

        managerClearBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerClearBtn.setText("Clear");
        managerClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerClearBtnActionPerformed(evt);
            }
        });

        managerPrintBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managerPrintBtn.setText("Print");
        managerPrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerPrintBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exitBtn1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(managerPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(managerClearBtn)
                        .addGap(44, 44, 44))))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(managerSearchBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel92)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                            .addComponent(managerIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel86)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(managerPhoneNumberTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(managerFullNameTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                .addComponent(managerIdCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(managerRegisterBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(managerUpdateBtn)
                            .addGap(18, 18, 18)
                            .addComponent(managerDeleteBtn)
                            .addGap(18, 18, 18)
                            .addComponent(managerDisplayBtn1))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitBtn1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(managerIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel86)
                    .addComponent(managerFullNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel89)
                    .addComponent(managerPhoneNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managerDeleteBtn)
                    .addComponent(managerUpdateBtn)
                    .addComponent(managerRegisterBtn)
                    .addComponent(managerDisplayBtn1))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel92)
                    .addComponent(managerIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(managerSearchBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managerClearBtn)
                    .addComponent(managerPrintBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void managerRegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerRegisterBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(managerIdCombo.getSelectedItem().equals("0") || managerFullNameTxt.getText().trim().isEmpty() || managerPhoneNumberTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "All Fields are required", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Managers theManagers = new Managers();
                int id = Integer.parseInt(managerIdCombo.getSelectedItem().toString());
                theManagers.setId(id);
                theManagers.setName(managerFullNameTxt.getText());
                theManagers.setPhoneNumber(managerPhoneNumberTxt.getText());
                CarWash dao = new CarWash();
                if(dao.checkManagerExist(theManagers)==0){
                    int a = JOptionPane.showConfirmDialog(null, "Register?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        if(managerPhoneNumberTxt.getText().length()>=13){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        ManagersService service = (ManagersService)theRegistry.lookup("man");
                        Managers managers = service.saveManagers(theManagers);
                        if(managers!=null){
                            JOptionPane.showMessageDialog(this, "Data Saved Successful");
                            addRowsDataToManagersTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Saved");
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "Phone Number must be 13 digits");
                        }
                    }if(a==1){
                        managerIdCombo.setSelectedIndex(0);
                        managerFullNameTxt.setText("");
                        managerPhoneNumberTxt.setText("");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "MANAGER ALREADY EXIST","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_managerRegisterBtnActionPerformed

    private void managerUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerUpdateBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(managerIdCombo.getSelectedItem().equals("0") || managerFullNameTxt.getText().trim().isEmpty() || managerPhoneNumberTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Search First", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Managers theManagers = new Managers();
                int id = Integer.parseInt(managerIdCombo.getSelectedItem().toString());
                theManagers.setId(id);
                theManagers.setName(managerFullNameTxt.getText());
                theManagers.setPhoneNumber(managerPhoneNumberTxt.getText());
                CarWash dao = new CarWash();
               
                    int a = JOptionPane.showConfirmDialog(null, "Update?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        if(managerPhoneNumberTxt.getText().length()>=13){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        ManagersService service = (ManagersService)theRegistry.lookup("man");
                        Managers managers = service.updateManagers(theManagers);
                        if(managers!=null){
                            JOptionPane.showMessageDialog(this, "Data Updated Successful");
                            addRowsDataToManagersTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Updated");
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "Phone Number must be 13 digits");
                        }
                    }if(a==1){
                        managerIdCombo.setSelectedIndex(0);
                        managerFullNameTxt.setText("");
                        managerPhoneNumberTxt.setText("");
                    }
                
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_managerUpdateBtnActionPerformed

    private void managerDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerDeleteBtnActionPerformed
        // TODO add your handling code here:
        try{
            if( managerIdTxt.getText().trim().isEmpty() || managerFullNameTxt.getText().trim().isEmpty() || managerPhoneNumberTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Search First", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Managers theManagers = new Managers();
                int id = Integer.parseInt(managerIdCombo.getSelectedItem().toString());
                theManagers.setId(id);
                theManagers.setName(managerFullNameTxt.getText());
                theManagers.setPhoneNumber(managerPhoneNumberTxt.getText());
                CarWash dao = new CarWash();
                
                    int a = JOptionPane.showConfirmDialog(null, "Delete?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        if(managerPhoneNumberTxt.getText().length()>=13){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        ManagersService service = (ManagersService)theRegistry.lookup("man");
                        Managers managers = service.deleteManagers(theManagers);
                        if(managers!=null){
                            JOptionPane.showMessageDialog(this, "Data Deleted Successful");
                            addRowsDataToManagersTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Deleted");
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "Phone Number must be 13 digits");
                        }
                    }if(a==1){
                        managerIdCombo.setSelectedIndex(0);
                        managerFullNameTxt.setText("");
                        managerPhoneNumberTxt.setText("");
                    }
                
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_managerDeleteBtnActionPerformed

    private void managerSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerSearchBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(managerIdTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter Manager Id ", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Managers theManagers = new Managers();
                int id = Integer.parseInt(managerIdTxt.getText());
                theManagers.setId(id);
                Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                ManagersService service = (ManagersService)theRegistry.lookup("man");
                Managers managers = service.searchManagers(theManagers);
                if(managers!=null){
                    managerIdCombo.setSelectedIndex(0);
                    managerFullNameTxt.setText("");
                    managerPhoneNumberTxt.setText("");
                    tableModel.setRowCount(0);
                    tableModel.addRow(new Object[]{
                        managers.getId(),
                        managers.getName(),
                        managers.getPhoneNumber()
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Data Not Found");
                }
            
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_managerSearchBtnActionPerformed

    private void ManagerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ManagerTableMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = ManagerTable.getSelectedRow();
        managerIdCombo.setSelectedItem(tableModel.getValueAt(selectedRowIndex, 0));
        managerIdCombo.setSelectedItem(tableModel.getValueAt(selectedRowIndex, 0).toString());
        managerFullNameTxt.setText(tableModel.getValueAt(selectedRowIndex, 1).toString());
        managerPhoneNumberTxt.setText(tableModel.getValueAt(selectedRowIndex, 2).toString());
        managerIdTxt.setText(tableModel.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_ManagerTableMouseClicked

    private void exitBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtn1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitBtn1ActionPerformed

    private void managerDisplayBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerDisplayBtn1ActionPerformed
        // TODO add your handling code here:
        addColumnsHeaderNameToManagersTable();
        addRowsDataToManagersTable();
    }//GEN-LAST:event_managerDisplayBtn1ActionPerformed

    private void managerClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerClearBtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "DO YOU WANT TO CLEAR EVERYTHING", "SELECT", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(a==0){
            tableModel.setRowCount(0);
            managerIdCombo.setSelectedIndex(0);
            managerFullNameTxt.setText("");
            managerPhoneNumberTxt.setText("");
            managerIdTxt.setText("");

        }
    }//GEN-LAST:event_managerClearBtnActionPerformed

    private void managerIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerIdComboActionPerformed
        // TODO add your handling code here:
        try{
             Employees theemployee = new Employees();
             int id = Integer.parseInt(managerIdCombo.getSelectedItem().toString());
             theemployee.setId(id);
             CarWash dao = new CarWash();
             Employees employees = dao.autoFillEmpname(theemployee);
             if(employees!=null){
                managerFullNameTxt.setText(employees.getFName());
             }
         }catch(Exception ex){
             ex.printStackTrace();
        }
        
        try{
             Employees theemployee = new Employees();
             int id = Integer.parseInt(managerIdCombo.getSelectedItem().toString());
             theemployee.setId(id);
             CarWash dao = new CarWash();
             Employees employees = dao.autoFillEmpphoneNumber(theemployee);
             if(employees!=null){
                managerPhoneNumberTxt.setText(employees.getPhoneNumber());
             }
         }catch(Exception ex){
             ex.printStackTrace();
        }
         
    }//GEN-LAST:event_managerIdComboActionPerformed

    private void managerPrintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerPrintBtnActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Managers List");
        MessageFormat footer = new MessageFormat("*****Car Wash*****");
        try{
            ManagerTable.print(JTable.PrintMode.NORMAL, header, footer);
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_managerPrintBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagersPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ManagerTable;
    private javax.swing.JButton exitBtn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton managerClearBtn;
    private javax.swing.JButton managerDeleteBtn;
    private javax.swing.JButton managerDisplayBtn1;
    private javax.swing.JTextField managerFullNameTxt;
    private javax.swing.JComboBox<String> managerIdCombo;
    private javax.swing.JTextField managerIdTxt;
    private javax.swing.JTextField managerPhoneNumberTxt;
    private javax.swing.JButton managerPrintBtn;
    private javax.swing.JButton managerRegisterBtn;
    private javax.swing.JButton managerSearchBtn;
    private javax.swing.JButton managerUpdateBtn;
    // End of variables declaration//GEN-END:variables
}
