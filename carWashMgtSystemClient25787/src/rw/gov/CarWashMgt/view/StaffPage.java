/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rw.gov.CarWashMgt.view;

import Utility.BDUtility;
import Validations.CarWash;
import java.awt.Color;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rw.gov.CarWashMgt.model.Employees;
import rw.gov.CarWashMgt.model.Users;
import rw.gov.CarWashMgt.service.ServicesService;
import rw.gov.CarWashMgt.service.UsersService;

/**
 *
 * @author ADMIN
 */
public class StaffPage extends javax.swing.JFrame {
    
    private String jdbcUrl = "jdbc:postgresql://localhost:5432/carWash_managment_system_db";
    private String username = "postgres";
    private String password = "Rayonnant@12";
    
    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form StaffPage
     */
    public StaffPage() {
        initComponents();
        BDUtility.setImage(this, "images/abc1.jpg", 1000, 550);
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(4, 4, 4, 4, Color.BLACK));
        UpdateUsersCombo();
        addColumnsHeaderNameToUsersTable();
    }
    
    private void UpdateUsersCombo(){
        try{
            Connection con = DriverManager.getConnection(jdbcUrl, username, password);
            String sql = "SELECT * FROM employees";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
             while(rs.next()){
                 staffIdCombo.addItem(rs.getString("emp_Id"));
             }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void addColumnsHeaderNameToUsersTable(){
        tableModel.setColumnCount(0);
        tableModel.addColumn("User ID");
        tableModel.addColumn("User Full Names");
        tableModel.addColumn("Username");
        tableModel.addColumn("Password");
        staffTable.setModel(tableModel);
    }
    
    private void addRowsDataToUsersTable(){
        try{
            tableModel.setRowCount(0);
            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
            UsersService service = (UsersService)theRegistry.lookup("user");
            List<Users> users = service.findAll();
            for(Users theUsers : users){
                tableModel.addRow(new Object[]{
                    theUsers.getId(),
                    theUsers.getNames(),
                    theUsers.getUserName(),
                    theUsers.getPassword()
                });
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel80 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        staffPasswordTxt = new javax.swing.JTextField();
        staffUsernameTxt = new javax.swing.JTextField();
        staffFullNamesTxt = new javax.swing.JTextField();
        staffIdCombo = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        exitBtn1 = new javax.swing.JButton();
        jLabel78 = new javax.swing.JLabel();
        staffIdTxt = new javax.swing.JTextField();
        staffRegisterBtn = new javax.swing.JButton();
        staffUpdateBtn = new javax.swing.JButton();
        staffDeleteBtn = new javax.swing.JButton();
        staffDisplayBtn = new javax.swing.JButton();
        staffSearchBtn = new javax.swing.JButton();
        staffClearBtn = new javax.swing.JButton();
        staffPrintBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 550));
        setUndecorated(true);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel80.setText("Id");

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel76.setText("Full Names");

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel75.setText("UserName");

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel77.setText("Password");

        staffFullNamesTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffFullNamesTxtActionPerformed(evt);
            }
        });

        staffIdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0" }));
        staffIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffIdComboActionPerformed(evt);
            }
        });

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        staffTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(staffTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("STAFF MANAGEMENT");

        exitBtn1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        exitBtn1.setText("X");
        exitBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtn1ActionPerformed(evt);
            }
        });

        jLabel78.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel78.setText("Staff Id");

        staffRegisterBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffRegisterBtn.setText("Register");
        staffRegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffRegisterBtnActionPerformed(evt);
            }
        });

        staffUpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffUpdateBtn.setText("Update");
        staffUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffUpdateBtnActionPerformed(evt);
            }
        });

        staffDeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffDeleteBtn.setText("Delete");
        staffDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffDeleteBtnActionPerformed(evt);
            }
        });

        staffDisplayBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffDisplayBtn.setText("Display");
        staffDisplayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffDisplayBtnActionPerformed(evt);
            }
        });

        staffSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffSearchBtn.setText("Search");
        staffSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffSearchBtnActionPerformed(evt);
            }
        });

        staffClearBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffClearBtn.setText("Clear");
        staffClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffClearBtnActionPerformed(evt);
            }
        });

        staffPrintBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staffPrintBtn.setText("Print");
        staffPrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffPrintBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitBtn1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(staffPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(staffClearBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(staffRegisterBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(staffUpdateBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(staffDeleteBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(staffDisplayBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel77, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel75)
                                            .addComponent(jLabel76)
                                            .addComponent(jLabel80))
                                        .addGap(15, 15, 15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(staffUsernameTxt)
                                            .addComponent(staffFullNamesTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(staffIdCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(staffPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(staffIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(staffSearchBtn, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitBtn1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffClearBtn)
                    .addComponent(staffPrintBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel80)
                            .addComponent(staffIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel76)
                            .addComponent(staffFullNamesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel75)
                            .addComponent(staffUsernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel77)
                            .addComponent(staffPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(staffDeleteBtn)
                            .addComponent(staffUpdateBtn)
                            .addComponent(staffRegisterBtn)
                            .addComponent(staffDisplayBtn))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel78)
                            .addComponent(staffIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(staffSearchBtn))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void staffFullNamesTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffFullNamesTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffFullNamesTxtActionPerformed

    private void staffTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffTableMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = staffTable.getSelectedRow();
        staffIdCombo.setSelectedItem(tableModel.getValueAt(selectedRowIndex, 0).toString());
        staffFullNamesTxt.setText(tableModel.getValueAt(selectedRowIndex, 1).toString());
        staffUsernameTxt.setText(tableModel.getValueAt(selectedRowIndex, 2).toString());
        staffPasswordTxt.setText(tableModel.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_staffTableMouseClicked

    private void exitBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtn1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitBtn1ActionPerformed

    private void staffRegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffRegisterBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(staffIdCombo.getSelectedItem().equals("0") || staffFullNamesTxt.getText().trim().isEmpty() || staffUsernameTxt.getText().trim().isEmpty() || staffPasswordTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "All Fields are required", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Users theUsers = new Users();
                int id = Integer.parseInt(staffIdCombo.getSelectedItem().toString());
                theUsers.setId(id);
                theUsers.setNames(staffFullNamesTxt.getText());
                theUsers.setUserName(staffUsernameTxt.getText());
                theUsers.setPassword(staffPasswordTxt.getText());
                CarWash dao = new CarWash();
                if(dao.checkUser(theUsers)==0){
                    int a = JOptionPane.showConfirmDialog(null, "Register?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        if(staffPasswordTxt.getText().length()>=5){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        UsersService service = (UsersService)theRegistry.lookup("user");
                        Users users = service.saveUsers(theUsers);
                        if(users!=null){
                            JOptionPane.showMessageDialog(this, "Data Saved Successful");
                            addRowsDataToUsersTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Saved");
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "PASSWORD MUST BE ABOVE 5 CHARACTERS");
                        }
                    }if(a==1){
                        staffIdCombo.setSelectedIndex(0);
                        staffFullNamesTxt.setText("");
                        staffUsernameTxt.setText("");
                        staffPasswordTxt.setText("");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "USER ALREADY EXIST","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_staffRegisterBtnActionPerformed

    private void staffUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffUpdateBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(staffIdCombo.getSelectedItem().equals("Select") || staffFullNamesTxt.getText().trim().isEmpty() || staffUsernameTxt.getText().trim().isEmpty() || staffPasswordTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Search First", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Users theUsers = new Users();
                int id = Integer.parseInt(staffIdCombo.getSelectedItem().toString());
                theUsers.setId(id);
                theUsers.setNames(staffFullNamesTxt.getText());
                theUsers.setUserName(staffUsernameTxt.getText());
                theUsers.setPassword(staffPasswordTxt.getText());
                
                    int a = JOptionPane.showConfirmDialog(null, "Update?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        if(staffPasswordTxt.getText().length()>=5){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        UsersService service = (UsersService)theRegistry.lookup("user");
                        Users users = service.updateUsers(theUsers);
                        if(users!=null){
                            JOptionPane.showMessageDialog(this, "Data Updated Successful");
                            addRowsDataToUsersTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Updated");
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "PASSWORD MUST BE ABOVE 5 CHARACTERS");
                        }
                    }if(a==1){
                        staffIdCombo.setSelectedIndex(0);
                        staffFullNamesTxt.setText("");
                        staffUsernameTxt.setText("");
                        staffPasswordTxt.setText("");
                    }
                
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_staffUpdateBtnActionPerformed

    private void staffDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffDeleteBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(staffIdCombo.getSelectedItem().equals("Select") || staffFullNamesTxt.getText().trim().isEmpty() || staffUsernameTxt.getText().trim().isEmpty() || staffPasswordTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Search First", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Users theUsers = new Users();
                int id = Integer.parseInt(staffIdCombo.getSelectedItem().toString());
                theUsers.setId(id);
                theUsers.setNames(staffFullNamesTxt.getText());
                theUsers.setUserName(staffUsernameTxt.getText());
                theUsers.setPassword(staffPasswordTxt.getText());
                CarWash dao = new CarWash();
                if(dao.checkUser(theUsers)==1){
                    int a = JOptionPane.showConfirmDialog(null, "Delete?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        if(staffPasswordTxt.getText().length()>=5){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        UsersService service = (UsersService)theRegistry.lookup("user");
                        Users users = service.deleteUsers(theUsers);
                        if(users!=null){
                            JOptionPane.showMessageDialog(this, "Data Deleted Successful");
                            addRowsDataToUsersTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Deleted");
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "PASSWORD MUST BE ABOVE 5 CHARACTERS");
                        }
                    }if(a==1){
                        staffIdCombo.setSelectedIndex(0);
                        staffFullNamesTxt.setText("");
                        staffUsernameTxt.setText("");
                        staffPasswordTxt.setText("");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "USER Doesn't EXIST","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_staffDeleteBtnActionPerformed

    private void staffDisplayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffDisplayBtnActionPerformed
        // TODO add your handling code here:
        addColumnsHeaderNameToUsersTable();
        addRowsDataToUsersTable();
    }//GEN-LAST:event_staffDisplayBtnActionPerformed

    private void staffSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffSearchBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(staffIdTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter staff Id ", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Users theUsers = new Users();
                int id = Integer.parseInt(staffIdTxt.getText());
                theUsers.setId(id);
                Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                UsersService service = (UsersService)theRegistry.lookup("user");
                Users users = service.searchUsers(theUsers);
                if(users!=null){
                    staffIdCombo.setSelectedIndex(0);
                    staffFullNamesTxt.setText("");
                    staffUsernameTxt.setText("");
                    staffPasswordTxt.setText("");
                    tableModel.setRowCount(0);
                    tableModel.addRow(new Object[]{
                        users.getId(),
                        users.getNames(),
                        users.getUserName(),
                        users.getPassword(),
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Data Not Found");
                }
            
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_staffSearchBtnActionPerformed

    private void staffClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffClearBtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "DO YOU WANT TO CLEAR EVERYTHING", "SELECT", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(a==0){
            tableModel.setRowCount(0);
            staffIdCombo.setSelectedIndex(0);
            staffFullNamesTxt.setText("");
            staffUsernameTxt.setText("");
            staffPasswordTxt.setText("");
            staffIdTxt.setText("");
            
        }
    }//GEN-LAST:event_staffClearBtnActionPerformed

    private void staffIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffIdComboActionPerformed
        // TODO add your handling code here:
        try{
             Employees theemployee = new Employees();
             int id = Integer.parseInt(staffIdCombo.getSelectedItem().toString());
             theemployee.setId(id);
             CarWash dao = new CarWash();
             Employees employees = dao.autoFillEmpname(theemployee);
             if(employees!=null){
                staffFullNamesTxt.setText(employees.getFName());
             }
         }catch(Exception ex){
             ex.printStackTrace();
        }
         try{
             Employees theemployee = new Employees();
             int id = Integer.parseInt(staffIdCombo.getSelectedItem().toString());
             theemployee.setId(id);
             CarWash dao = new CarWash();
             Employees employees = dao.autoFillEmpusername(theemployee);
             if(employees!=null){
                staffUsernameTxt.setText(employees.getLName()+"@carwash.com");
             }
         }catch(Exception ex){
             ex.printStackTrace();
        }
    }//GEN-LAST:event_staffIdComboActionPerformed

    private void staffPrintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffPrintBtnActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Staff List");
        MessageFormat footer = new MessageFormat("*****Car Wash*****");
        try{
            staffTable.print(JTable.PrintMode.NORMAL, header, footer);
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_staffPrintBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitBtn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton staffClearBtn;
    private javax.swing.JButton staffDeleteBtn;
    private javax.swing.JButton staffDisplayBtn;
    private javax.swing.JTextField staffFullNamesTxt;
    private javax.swing.JComboBox<String> staffIdCombo;
    private javax.swing.JTextField staffIdTxt;
    private javax.swing.JTextField staffPasswordTxt;
    private javax.swing.JButton staffPrintBtn;
    private javax.swing.JButton staffRegisterBtn;
    private javax.swing.JButton staffSearchBtn;
    private javax.swing.JTable staffTable;
    private javax.swing.JButton staffUpdateBtn;
    private javax.swing.JTextField staffUsernameTxt;
    // End of variables declaration//GEN-END:variables
}
