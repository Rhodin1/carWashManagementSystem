/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rw.gov.CarWashMgt.view;

import Utility.BDUtility;
import Validations.CarWash;
import java.awt.Color;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.MessageFormat;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rw.gov.CarWashMgt.model.Services;
import rw.gov.CarWashMgt.service.ServicesService;

/**
 *
 * @author ADMIN
 */
public class ServicesPage extends javax.swing.JFrame {
    
    DefaultTableModel tableModel = new DefaultTableModel();
    /**
     * Creates new form ServicesPage
     */
    public ServicesPage() {
        initComponents();
        BDUtility.setImage(this, "images/abc1.jpg", 1000, 550);
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(4, 4, 4, 4, Color.BLACK));
        addColumnsHeaderNameToServicesTable();
    }
    
     private void addColumnsHeaderNameToServicesTable(){
        tableModel.setColumnCount(0);
        tableModel.addColumn("Service Id");
        tableModel.addColumn("Service Name");
        tableModel.addColumn("Amount");
        servicesTable.setModel(tableModel);
    }
    
    private void addRowsDataToServicesTable(){
        try{
            tableModel.setRowCount(0);
            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
            ServicesService service = (ServicesService)theRegistry.lookup("serv");
            List<Services> ser = service.findAll();
            for(Services theService : ser){
                tableModel.addRow(new Object[]{
                    theService.getId(),
                    theService.getName(),
                    theService.getPrice(),
                    
                });
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel66 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        serviceNameTxt = new javax.swing.JTextField();
        servicePriceTxt = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        ServiceIdTxt = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        servicesTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        carRegisterBtn = new javax.swing.JButton();
        carUpdateBtn = new javax.swing.JButton();
        serviceDeleteBtn = new javax.swing.JButton();
        displayBtn = new javax.swing.JButton();
        carSearchBtn = new javax.swing.JButton();
        carClearBtn = new javax.swing.JButton();
        servicePrintBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 550));
        setUndecorated(true);

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel66.setText("Service Name");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel65.setText("Price");

        serviceNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceNameTxtActionPerformed(evt);
            }
        });

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel71.setText("Service Id");

        servicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        servicesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                servicesTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(servicesTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("SERVICES MANAGEMENT");

        exitBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        exitBtn.setText("X");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        carRegisterBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        carRegisterBtn.setText("Register");
        carRegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carRegisterBtnActionPerformed(evt);
            }
        });

        carUpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        carUpdateBtn.setText("Update");
        carUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carUpdateBtnActionPerformed(evt);
            }
        });

        serviceDeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        serviceDeleteBtn.setText("Delete");
        serviceDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceDeleteBtnActionPerformed(evt);
            }
        });

        displayBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayBtn.setText("Display");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });

        carSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        carSearchBtn.setText("Search");
        carSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carSearchBtnActionPerformed(evt);
            }
        });

        carClearBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        carClearBtn.setText("Clear");
        carClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carClearBtnActionPerformed(evt);
            }
        });

        servicePrintBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        servicePrintBtn.setText("Print");
        servicePrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicePrintBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(311, 311, 311)
                .addComponent(exitBtn))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(servicePrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(carClearBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(carRegisterBtn)
                                .addGap(18, 18, 18)
                                .addComponent(carUpdateBtn)
                                .addGap(18, 18, 18)
                                .addComponent(serviceDeleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(displayBtn)
                                .addGap(28, 28, 28))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(carSearchBtn)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel71)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ServiceIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel65)
                                                .addComponent(jLabel66))
                                            .addGap(90, 90, 90)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(servicePriceTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(serviceNameTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(exitBtn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(serviceNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(servicePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serviceDeleteBtn)
                            .addComponent(carUpdateBtn)
                            .addComponent(carRegisterBtn)
                            .addComponent(displayBtn))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(ServiceIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(carSearchBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carClearBtn)
                            .addComponent(servicePrintBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void serviceNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceNameTxtActionPerformed

    private void servicesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_servicesTableMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = servicesTable.getSelectedRow();
        ServiceIdTxt.setText(tableModel.getValueAt(selectedRowIndex, 0).toString());
        serviceNameTxt.setText(tableModel.getValueAt(selectedRowIndex, 1).toString());
        servicePriceTxt.setText(tableModel.getValueAt(selectedRowIndex, 2).toString());
    }//GEN-LAST:event_servicesTableMouseClicked

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void carRegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carRegisterBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(serviceNameTxt.getText().trim().isEmpty() || servicePriceTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "All Fields are required", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Services theServices = new Services();
                theServices.setName(serviceNameTxt.getText());
                double price = Double.parseDouble(servicePriceTxt.getText());
                theServices.setPrice(price);
                
                    int a = JOptionPane.showConfirmDialog(null, "Register?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        CarWash dao = new CarWash();
                        if(dao.CheckServiceExist(theServices)==0){
                            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                            ServicesService service = (ServicesService)theRegistry.lookup("serv");
                            Services ser = service.saveServices(theServices);
                            if(ser!=null){
                                JOptionPane.showMessageDialog(this, "Data Saved Successful");
                                addRowsDataToServicesTable();
                            }else{
                                JOptionPane.showMessageDialog(this, "Data Not Saved");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null, "Service already exist","ERROR",JOptionPane.ERROR_MESSAGE);
                        }
                        
                    }if(a==1){
                        serviceNameTxt.setText("");
                        servicePriceTxt.setText("");
                    }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_carRegisterBtnActionPerformed

    private void carUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carUpdateBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(serviceNameTxt.getText().trim().isEmpty() || servicePriceTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Search a service first", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Services theServices = new Services();
                int id = Integer.parseInt(ServiceIdTxt.getText());
                theServices.setId(id);
                theServices.setName(serviceNameTxt.getText());
                double price = Double.parseDouble(servicePriceTxt.getText());
                theServices.setPrice(price);
                
                    int a = JOptionPane.showConfirmDialog(null, "Update?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        ServicesService service = (ServicesService)theRegistry.lookup("serv");
                        Services ser = service.updateServices(theServices);
                        if(ser!=null){
                            JOptionPane.showMessageDialog(this, "Data Updated Successful");
                            addRowsDataToServicesTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Updated");
                        }
                    }if(a==1){
                        serviceNameTxt.setText("");
                        servicePriceTxt.setText("");
                    }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_carUpdateBtnActionPerformed

    private void serviceDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceDeleteBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(serviceNameTxt.getText().trim().isEmpty() || servicePriceTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Search a service first", "Missing", JOptionPane.ERROR_MESSAGE);
            }else{
                Services theServices = new Services();
                int id = Integer.parseInt(ServiceIdTxt.getText());
                theServices.setId(id);
                theServices.setName(serviceNameTxt.getText());
                double price = Double.parseDouble(servicePriceTxt.getText());
                theServices.setPrice(price);
                
                    int a = JOptionPane.showConfirmDialog(null, "Delete?","APPROVE",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(a==0){
                        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                        ServicesService service = (ServicesService)theRegistry.lookup("serv");
                        Services ser = service.deleteServices(theServices);
                        if(ser!=null){
                            JOptionPane.showMessageDialog(this, "Data Deleted Successful");
                            addRowsDataToServicesTable();
                        }else{
                            JOptionPane.showMessageDialog(this, "Data Not Deleted");
                        }
                    }if(a==1){
                        serviceNameTxt.setText("");
                        servicePriceTxt.setText("");
                    }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_serviceDeleteBtnActionPerformed

    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtnActionPerformed
        // TODO add your handling code here:
        ServiceIdTxt.setText("");
        serviceNameTxt.setText("");
        servicePriceTxt.setText("");
        addColumnsHeaderNameToServicesTable();
        addRowsDataToServicesTable();
    }//GEN-LAST:event_displayBtnActionPerformed

    private void carSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carSearchBtnActionPerformed
        // TODO add your handling code here:
        try{
            if(ServiceIdTxt.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter the Service Id", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else{
                Services theServices = new Services();
                int id = Integer.parseInt(ServiceIdTxt.getText());
                theServices.setId(id);
                Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1",81);
                ServicesService service = (ServicesService)theRegistry.lookup("serv");
                Services ser = service.searchServices(theServices);
                if(ser!=null){
                    serviceNameTxt.setText("");
                    servicePriceTxt.setText("");
                    tableModel.setRowCount(0);
                    tableModel.addRow(new Object[]{
                    ser.getId(),
                    ser.getName(),
                    ser.getPrice(),
                    
                });
                    
                }else{
                    JOptionPane.showMessageDialog(this, "Data not Found");
                }
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_carSearchBtnActionPerformed

    private void carClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carClearBtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "DO YOU WANT TO CLEAR EVERYTHING", "SELECT", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(a==0){
            tableModel.setRowCount(0);
            ServiceIdTxt.setText("");
            serviceNameTxt.setText("");
            servicePriceTxt.setText("");
        }
    }//GEN-LAST:event_carClearBtnActionPerformed

    private void servicePrintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicePrintBtnActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Services List");
        MessageFormat footer = new MessageFormat("*****Car Wash*****");
        try{
            servicesTable.print(JTable.PrintMode.NORMAL, header, footer);
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_servicePrintBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServicesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServicesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServicesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServicesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServicesPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ServiceIdTxt;
    private javax.swing.JButton carClearBtn;
    private javax.swing.JButton carRegisterBtn;
    private javax.swing.JButton carSearchBtn;
    private javax.swing.JButton carUpdateBtn;
    private javax.swing.JButton displayBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton serviceDeleteBtn;
    private javax.swing.JTextField serviceNameTxt;
    private javax.swing.JTextField servicePriceTxt;
    private javax.swing.JButton servicePrintBtn;
    private javax.swing.JTable servicesTable;
    // End of variables declaration//GEN-END:variables
}
